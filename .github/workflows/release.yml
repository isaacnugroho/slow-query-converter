name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ''
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: '.exe'
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ''
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ''
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: runner.os != 'Windows'
        run: |
          strip target/${{ matrix.target }}/release/slow-query-converter${{ matrix.ext }}

      - name: Strip binary (Windows)
        if: runner.os == 'Windows'
        run: |
          x86_64-w64-mingw32-strip target/${{ matrix.target }}/release/slow-query-converter${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: slow-query-converter-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/slow-query-converter${{ matrix.ext }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          for file in */slow-query-converter*; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "$file.sha256"
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: MariaDB Slow Query to CSV Converter ${{ github.ref_name }}
          body: |
            ## üöÄ MariaDB Slow Query to CSV Converter ${{ github.ref_name }}

            A high-performance Rust utility to parse MariaDB slow query logs and convert them into clean, multiline CSV format.

            ### üì¶ Downloads

            **Linux (x86_64)**: `slow-query-converter-x86_64-unknown-linux-gnu`
            **Linux (ARM64)**: `slow-query-converter-aarch64-unknown-linux-gnu`
            **Windows (x64)**: `slow-query-converter-x86_64-pc-windows-msvc.exe`
            **macOS (Intel)**: `slow-query-converter-x86_64-apple-darwin`
            **macOS (Apple Silicon)**: `slow-query-converter-aarch64-apple-darwin`

            ### üõ†Ô∏è Usage

            ```bash
            # Make executable (Unix)
            chmod +x slow-query-converter-*
            
            # Convert to CSV file
            ./slow-query-converter-* -i slow.log -o output.csv
            
            # Output to stdout
            ./slow-query-converter-* -i slow.log
            ```

            ### üìù Features

            - **Fast Processing**: Optimized for large log files
            - **Multiline Query Support**: Handles multi-line SQL queries
            - **Metadata Extraction**: Separates SET timestamp and USE schema statements
            - **Flexible Output**: File or stdout output
            - **Clean CSV Format**: Excel-compatible output

            ### üîó Repository

            https://github.com/isaacnugroho/slow-query-converter

            ---

            **Checksums:**
            - All binaries include SHA256 checksums for verification
            - Use `sha256sum -c *.sha256` to verify integrity
          files: |
            artifacts/*/slow-query-converter*
            artifacts/*/slow-query-converter*.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
